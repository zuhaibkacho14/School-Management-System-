<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxIQEBUPEBAQEBUVDw8QFQ8QFxAPEBAXFhIWFxUSExYY
        KCggGBomGxUVITEiJSkrLi4uFx83ODMtNygtLi3/2wBDAQoKCg4NDhsQEBotHx8lLS0tLy0tLS8tLS0t
        LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSstLS0rLS3/wAARCADbAOYDAREAAhEBAxEB/8QA
        HAABAAIDAQEBAAAAAAAAAAAAAAUGAQMEAgcI/8QASxAAAQMCAQUKBw4GAAcAAAAAAQACAwQREgUGEyHR
        FiIxQVFSU2GRogcUMnGDocEVNDVCVHJzgZKjsbPS4RclYnSTsiMkM0Nk8PH/xAAbAQEAAgMBAQAAAAAA
        AAAAAAAAAQQCBQYDB//EAC4RAQABAwIEBQMEAwEAAAAAAAABAgMRBAUSEyExFTIzUVIUQYEiYWJxBiNC
        sf/aAAwDAQACEQMRAD8Am1ccIICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA
        gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJCO
        gh9sCJEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEGE/sSlJRNDcThckXtxDqXIa7d7ld7lW5xGcZdfoNo
        t0WebcjinGcNdIWyOLTG0aidXF1Fe+tm5pbVNyi5mXloYtaq7VartYj3aa6mwEEcB9XUtjtO4TqqJirz
        Q1m7bdGkriaPLLmW3hqBARAiRAQEBAQEBAQEBAQEBAQEBAQQuWc4WUzxHgMjrAkAhobfg18qLum0U3Y4
        s9EduyHQH7Y2JlZ8L/kbsh0B+2NiHhf8lzyAzTQMnkZhxjEGE3s2+onrI1rlN13a7Tcm3anGO7dbfslq
        mniudfZKeKs5jVpp3DUz3qbWNu0/2phtVOZ4pzK7EcMYgssprrqiIqlEUU0zM0xDzJGHcIB86zs367U5
        onDC9YouxiuMtZpGH4o/BWadz1NNWeJUq2vTVU44VSznyr4lK1hiL2vaXNdiA4DYi1uLV2rr9s131VrM
        94c5q9li3X+mroht2jegP2xsWzz7qvhmP+gZ5t6A/bGxCNrz/wBLDk2ubPGJWXsbix4WkcIKNdetTaq4
        ZdSPIQEBAQEBAQEBAQEBAQEBBXIcnR1OWGwzAljg0kA4b4WXA82pY1ziHSbbGbUQ+tHNHJ/yGl/xsXhx
        S2vDDyczsn/IaX/G1OKUcMG50DUx+Bo1NY1tgwcTR1Aalob+zxduTXxd1+jVcMRGD3APTHs/defgcfJP
        1n7HuAemPZ+6eBx8k/Wfse4B6Y9n7qPA4+R9Z/E9wD0x7P3TwOPkfWfse4B6Y9n7qfA4+SPrP4tkOb0X
        /fZHPwYdIxrsHLa9+HV2LY6HRfSxPXOVe/d5mOjpbkOlHBS049GzYth1eOFX8J2R6cZMlkbBE17NG5j2
        tDXNJkaDYjqJWVMznDC5ETSo+Znvb0r/AGKw5fcvW/CeRQEBAQEBAQEBAQEBAQEBAQQmSDbLsX1D7orC
        vs6XbfTh9sXg2v3U+rzpl90TRRmBrDema993PbUmAytLmgi8dgG+c8KnDDi6vOS8pZRmhqJNLRgwzTQg
        aKU4jCd87y+McA4utTiMmapiZcEmddY2joqh76cGskBu2GeXQsMBfbA12J7rji7E4Y7I4pxEuutzsmgn
        jjeI3sdQtldKGPiwyvLxESxxu1hLWtsdYLgkUk1y5znVWuAdEKbeZIhyjIx7ZBpC50mNjHA7zUzVcFMH
        FOXVPnqfG6djBGIXspTNjNpWuqWuMQZr4rNvq+OE4eieLq54c9ZjK6FzI2u90xTsNjaSDTOieRr8trg2
        /wA8JwnGk8j5Xq6oSVTTTspmyVMbYnNe6dwiLmiQuBwglzfJtwcaiYiJIql5zCy7PWxaaZ8ZvFG7AyGe
        HAXX4JHnDINXxUqjCaass+FL4JqPQ/nMSnzIr8r53mZ729K/2Ky5fcvW/CdRQEBAQEBAQEBAQEBAQEBA
        QQGTjbLsPzmj7pywr8rpNs9Ol9xKrtsgTmlS+VgOPxkVWnuNNjDg4b/hw6rYeCyyyjhd9HkmKJksbMWG
        WSaV9zc4pfLtyBRkx0cM2alO6CnpwZmNpbaF0cjmSNsws8sazvSVOTheps2IHhwk0suOl8Uc6R7nvcwP
        LgS468VzfEoyTS5ajMmlkw4tPZtNHSljZXsZLExznNZKB5Qu43vwqco4W6fM+kfpS6LfSvjkMmrSRmMM
        DBE7hY0CNosFHEnhZfmlTHAS15MdXJWNdiOISPdd1zxtJ14eoKeI4Yeoc14GTOlY6dge+SR0DJZG05e8
        EPfoxqucRPJfWoyjhbcg5vx0TcEUlQ5gY2Nscsr5Y2AcGBp1N+pJnKaacInwp/BM/ng/PYsqfMxueV89
        zM97elf7FYcvuXrfhOooCAgICAgICAgICAgICAgIK5SG2XIPpIx92VhX5XSbb6dL7qVXbZDZcy2aZzWi
        PHiaXXJwgWNuRZ005a/Wa2bExERkyNlp078LotGCxz2uvcOsQDxdaVU4RpdbVeqxVTj2TCwbEUggICAg
        KEql4Vfgmf51P+exZ0eZ53PK+fZme9vSv9isOX3L1vwnUUBAQEBAQEBAQEBAQEBAQEFZiNstwfTQetqw
        r8rpNt9OH3dV2265QuXMnzSSMkhwamua5r72cCdYPKFnTVhrdbprlyuKqGrIuS52TmaYs1xlgDTcDWLA
        DiAAU1VRhhpNLdou8dadJPJ61g2piPN9aBiPN9aBiPN9aBiPN9aBiPN9aD0FAqPhXP8AKZvn0357FnR5
        mFzyvn2Znvb0r/YrDl9y9b8J5FAQEBAQEBAQEBAQEBAQEBBVXG2WYPp6X8Qsauzo9u9OH3xVm3lA5w5S
        mie1sIBuxz3XGI2BAXpRET3avX6m7bqim285DylPJKGTYNcRkDQLPGsAFw4r3SqmIRotTerr4bmOyfWD
        bCAgICAiBBUPCyf5TN9JTfnsWVHmYXPK+f5me9vSv9isOX3L1vwnkUBAQEBAQEBAQEBAQEBAQEFQq3Wy
        vCf/ACKT/dqxq7Oj2704foEqs2/3ROV8kGd7JGS6JzAQDbFx+cf+lZ01YUNVpJu1xVTVjDXknIZhlMzp
        dIXNI4LXuQSSbnkU1VZ+zHTaGq1XNc1ZylyDyjsKwbE33KOw7UDfco7DtQN9yjsO1A33KOw7UDfco7Dt
        Qeggp3ha+CpfpKb85qyo8zC55VBzM97elf7FYcvuXrfhPIoCAgICAgICAgICAgICAgIKdX/C0P8AcUf+
        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
        AgICAgIMIMoMoCAgICAgIP/Z
</value>
  </data>
</root>